% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TSP_3_nearest.R
\name{TSP_nearest}
\alias{TSP_nearest}
\title{Nearest Neighbor Algorithm for Solving the Traveling Salesman Problem (TSP)}
\usage{
TSP_nearest(data, type = "one")
}
\arguments{
\item{data}{A numeric matrix or data frame of coordinates where each row represents a city and 
each column represents the x and y coordinates (for a 2D TSP).}

\item{type}{A character string specifying the type of starting city selection. 
If `type = "one"`, the starting city is randomly chosen. 
If `type = "all"`, the algorithm tests all possible starting cities and selects the best one.}
}
\value{
A numeric vector representing the order of cities in the optimal tour, 
        with the class attribute set to "TSP".
}
\description{
This function solves the Traveling Salesman Problem (TSP) using the nearest neighbor heuristic. 
It starts from either one city or all cities (iteratively) as possible starting points, and at each step, 
it selects the nearest unvisited city and inserts it into the tour.
}
\examples{
# Generate a random set of 5 cities
cities <- matrix(runif(10), ncol = 2)
# Solve TSP using nearest neighbor starting from one city
best_tour <- TSP_nearest(cities, type = "one")
# Solve TSP using nearest neighbor testing all starting cities
best_tour_all <- TSP_nearest(cities, type = "all")

}
