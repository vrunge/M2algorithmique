% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sorting_2_heap.R
\name{heap_sort}
\alias{heap_sort}
\title{Heap Sort Algorithm}
\usage{
heap_sort(v)
}
\arguments{
\item{v}{A numeric vector to be sorted.}
}
\value{
A numeric vector, sorted in ascending order.
}
\description{
Implements the heap sort algorithm, which sorts a numeric vector by first 
building a max heap and then repeatedly extracting the largest element 
to place it in its correct position in the sorted array.
}
\details{
Heap sort works by transforming the input vector into a max heap, a binary 
tree where each parent node is greater than or equal to its child nodes. 
After constructing the heap, the largest element (the root) is swapped with 
the last element, and the heap is rebuilt for the remaining elements. This 
process repeats until all elements are sorted.
}
\examples{
heap_sort(rnorm(100))
heap_sort(sample(100))
}
