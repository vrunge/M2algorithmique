% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{insertion_sort_Rcpp}
\alias{insertion_sort_Rcpp}
\title{Insertion Sort Algorithm (C++ Implementation)}
\usage{
insertion_sort_Rcpp(v)
}
\arguments{
\item{v}{A numeric vector containing unsorted elements.}
}
\value{
A numeric vector of the same length as `v`, sorted in ascending order.
}
\description{
This function implements the **Insertion Sort** algorithm in C++ and is exported to R using Rcpp. 
Insertion Sort is a simple sorting algorithm that builds the sorted sequence one element at a time 
by inserting each new element into its correct position within the sorted part of the vector.

The algorithm works by iterating through the input vector and shifting larger elements to the right 
before inserting the current element (key) into its proper position.
}
\details{
- Time Complexity: **O(nÂ²)** in the worst and average cases, **O(n)** in the best case (already sorted data).
- Space Complexity: **O(1)** (in-place sorting, no additional memory used).
- Stable Sorting Algorithm: Maintains the relative order of equal elements.
}
\examples{
insertion_sort_Rcpp(rnorm(100))
insertion_sort_Rcpp(sample(100))

}
