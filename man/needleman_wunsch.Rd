% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/needleman_wunsch.R
\name{needleman_wunsch}
\alias{needleman_wunsch}
\title{Needleman–Wunsch Global Sequence Alignment}
\usage{
needleman_wunsch(seq1, seq2, match = 1, mismatch = -1, gap = -2)
}
\arguments{
\item{seq1}{A character string representing the first sequence (e.g., DNA, RNA, or protein).}

\item{seq2}{A character string representing the second sequence.}

\item{match}{Numeric score for a match between two characters. Default is 1.}

\item{mismatch}{Numeric penalty for a mismatch between two characters. Default is -1.}

\item{gap}{Numeric penalty for a gap (insertion or deletion). Default is -2.}
}
\value{
A list containing:
\describe{
  \item{score}{The optimal alignment score (numeric).}
  \item{score_matrix}{The dynamic programming score matrix (matrix).}
  \item{traceback_matrix}{The matrix storing traceback directions ("diag", "up", "left").}
  \item{alignment}{A character vector of length 2 containing the aligned sequences.}
}
}
\description{
Computes the optimal global alignment between two sequences using the
Needleman–Wunsch algorithm with a simple scoring scheme.
}
\details{
The function implements the Needleman–Wunsch algorithm:
\enumerate{
  \item Initializes a scoring matrix with gap penalties.
  \item Fills the matrix using dynamic programming to compute optimal alignment scores.
  \item Stores traceback directions in a separate matrix to reconstruct the alignment.
  \item Performs a traceback from the bottom-right corner to recover the optimal alignment.
}
Time and space complexity are both O(n*m), where n and m are the lengths of seq1 and seq2.
}
\examples{
res <- needleman_wunsch("GATTACA", "GATAAA")
res$score
res$alignment
res$score_matrix
res$traceback_matrix

}
